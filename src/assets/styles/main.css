/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/preflight.css
 *
 * If using `postcss-import`, you should import this line from it's own file:
 *
 * @import "./tailwind-preflight.css";
 *
 * See: https://github.com/tailwindcss/tailwindcss/issues/53#issuecomment-341413622
 */

@tailwind preflight;
/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "components/buttons";
 * @import "components/forms";
 */

@tailwind components;
/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 *
 * If using `postcss-import`, you should import this line from it's own file:
 *
 * @import "./tailwind-utilities.css";
 *
 * See: https://github.com/tailwindcss/tailwindcss/issues/53#issuecomment-341413622
 */

@tailwind utilities;
/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "utilities/background-patterns";
 * @import "utilities/skew-transforms";
 */

.list-complete-item {
  transition: all 400ms ease;
}

.list-complete-enter, .list-complete-leave-to {
  opacity: 0;
  transform: translateY(30px);
}

.list-complete-leave-active {
  position: absolute;
}

.list-complete-item>button {
  transform: scale(0.8);
  opacity: 0.5;
  transition: .2s all ease;
}

.list-complete-item>button.active {
  opacity: 1;
  transform: scale(1);
}

.list-container-default {
  @apply .flex .flex-wrap .relative;
}

.list-container-order {
  @apply .block;
}

.list-btn-default {
  @apply .bg-grey-darkest .text-white .text-xl .rounded-sm .overflow-hidden .m-2 .font-light .flex .border .border-black .shadow;
}

.list-btn-sort {
  @apply .px-8 .py-2 .bg-grey-darkest .text-white .text-xl .rounded-sm .overflow-hidden .m-2 .font-light .flex .border .border-black .shadow;
}

.page-slide-enter-active, .page-slide-leave-active {
  transition: all .3s ease;
  transform: translateX(0)
}

.page-slide-enter {
  opacity: 0;
  transform: translateX(200px)
}

.page-slide-leave-to {
  opacity: 0;
  transform: translateX(-200px)
}

.disabled {
  @apply .text-white .bg-grey-darker border-grey-darkest pointer-events-none;
}

.tools-input {
  @apply .border .w-full .p-2 .resize-none rounded shadow-inner;
}

.fade-enter-active, .fade-leave-active {
  transition: opacity .5s;
}

.fade-enter, .fade-leave-to {
  opacity: 0;
}

html, body {
  height: 100%;
}

/*table stuff*/

.tools-table {
  border-collapse: collapse;
  width: 100%;
}

.tools-table td, .tools-table th {
  border: 1px solid #ddd;
  padding: 8px;
}

/*.tools-table tr:nth-child(even) {
  background-color: #f2f2f2;
}*/

.tools-table th {
  padding-top: 12px;
  padding-bottom: 12px;
  text-align: left;
  color: white;
  font-weight: 300;
}

.transition-sm {
  transition: 0.2s all;
}